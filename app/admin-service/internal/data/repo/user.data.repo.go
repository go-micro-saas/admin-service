// Package datarepos
// Code generated by ikaiguang. <https://github.com/ikaiguang>
package datarepos

import (
	context "context"
	"database/sql"
	"github.com/go-micro-saas/admin-service/app/admin-service/internal/data/po"
	gormpkg "github.com/ikaiguang/go-srv-kit/data/gorm"
)

// UserDataRepo repo
type UserDataRepo interface {
	NewTransaction(ctx context.Context, opts ...*sql.TxOptions) gormpkg.TransactionInterface
	Create(ctx context.Context, dataModel *po.User) error
	CreateWithTransaction(ctx context.Context, tx gormpkg.TransactionInterface, dataModel *po.User) (err error)
	ExistCreate(ctx context.Context, dataModel *po.User) (anotherModel *po.User, isNotFound bool, err error)
	CreateInBatches(ctx context.Context, dataModels []*po.User, batchSize int) error
	Insert(ctx context.Context, dataModels []*po.User) error
	Update(ctx context.Context, dataModel *po.User) error
	ExistUpdate(ctx context.Context, dataModel *po.User) (anotherModel *po.User, isNotFound bool, err error)
	QueryOneById(ctx context.Context, id interface{}) (dataModel *po.User, isNotFound bool, err error)
	QueryOneByUserId(ctx context.Context, userId uint64) (dataModel *po.User, isNotFound bool, err error)
	QueryOneByConditions(ctx context.Context, conditions map[string]interface{}) (dataModel *po.User, isNotFound bool, err error)
	QueryAllByConditions(ctx context.Context, conditions map[string]interface{}) (dataModels []*po.User, err error)
	List(ctx context.Context, conditions map[string]interface{}, paginatorArgs *gormpkg.PaginatorArgs) (dataModels []*po.User, totalNumber int64, err error)
	Delete(ctx context.Context, dataModel *po.User) error
	DeleteByIds(ctx context.Context, ids interface{}) error
}
